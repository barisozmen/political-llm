# Generated by Django 5.1.2 on 2025-06-11 14:46

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="LawCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True, max_length=500)),
                (
                    "icon",
                    models.CharField(default="fas fa-balance-scale", max_length=50),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name_plural": "Law Categories",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="GeneratedLaw",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("content", models.TextField()),
                ("summary", models.TextField(blank=True, max_length=500)),
                (
                    "prompt_used",
                    models.TextField(help_text="The prompt that generated this law"),
                ),
                ("ai_model", models.CharField(default="gpt-4", max_length=50)),
                (
                    "system_prompt",
                    models.TextField(help_text="The system prompt (user values) used"),
                ),
                ("is_favorite", models.BooleanField(default=False)),
                ("is_implemented", models.BooleanField(default=False)),
                ("implementation_notes", models.TextField(blank=True)),
                (
                    "tags",
                    models.CharField(
                        blank=True, help_text="Comma-separated tags", max_length=500
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="generated_laws",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="political_god.lawcategory",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="LawGenerationRequest",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("prompt", models.TextField()),
                ("success", models.BooleanField(default=False)),
                ("error_message", models.TextField(blank=True)),
                ("credits_used", models.IntegerField(default=10)),
                ("billing_processed", models.BooleanField(default=False)),
                ("response_time_seconds", models.FloatField(blank=True, null=True)),
                ("token_count", models.IntegerField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="political_god.lawcategory",
                    ),
                ),
                (
                    "generated_law",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="political_god.generatedlaw",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="law_requests",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="LawSearch",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("query", models.CharField(max_length=500)),
                ("filters", models.JSONField(blank=True, default=dict)),
                ("results_count", models.IntegerField(default=0)),
                ("credits_used", models.IntegerField(default=1)),
                ("billing_processed", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="law_searches",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="StateConstitution",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name of your network state", max_length=200
                    ),
                ),
                ("preamble", models.TextField(help_text="Constitutional preamble")),
                ("fundamental_rights", models.TextField(help_text="Bill of rights")),
                (
                    "governmental_structure",
                    models.TextField(help_text="How the state is organized"),
                ),
                (
                    "amendment_process",
                    models.TextField(help_text="How laws can be changed"),
                ),
                ("is_ai_assisted", models.BooleanField(default=False)),
                ("ai_generation_notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="constitution",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserValues",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "political_philosophy",
                    models.TextField(
                        blank=True,
                        help_text="Your political philosophy and worldview",
                        max_length=2000,
                    ),
                ),
                (
                    "core_values",
                    models.TextField(
                        blank=True,
                        help_text="Your fundamental values (e.g., freedom, equality, justice, security)",
                        max_length=2000,
                    ),
                ),
                (
                    "governance_style",
                    models.CharField(
                        choices=[
                            ("democratic", "Democratic"),
                            ("technocratic", "Technocratic"),
                            ("libertarian", "Libertarian"),
                            ("progressive", "Progressive"),
                            ("conservative", "Conservative"),
                            ("socialist", "Socialist"),
                            ("anarchist", "Anarchist"),
                            ("mixed", "Mixed Approach"),
                            ("custom", "Custom"),
                        ],
                        default="democratic",
                        max_length=100,
                    ),
                ),
                (
                    "priority_areas",
                    models.TextField(
                        blank=True,
                        help_text="Key areas of focus for your state (e.g., technology, environment, economy)",
                        max_length=1500,
                    ),
                ),
                (
                    "individual_rights",
                    models.TextField(
                        blank=True,
                        help_text="Individual rights and freedoms you want to protect",
                        max_length=1500,
                    ),
                ),
                (
                    "collective_responsibilities",
                    models.TextField(
                        blank=True,
                        help_text="Collective duties and social responsibilities",
                        max_length=1500,
                    ),
                ),
                (
                    "economic_system",
                    models.CharField(
                        choices=[
                            ("free_market", "Free Market Capitalism"),
                            ("social_market", "Social Market Economy"),
                            ("mixed_economy", "Mixed Economy"),
                            ("planned_economy", "Planned Economy"),
                            ("ubi_economy", "Universal Basic Income Economy"),
                            ("post_scarcity", "Post-Scarcity Economy"),
                            ("custom", "Custom Economic Model"),
                        ],
                        default="mixed_economy",
                        max_length=100,
                    ),
                ),
                (
                    "cultural_considerations",
                    models.TextField(
                        blank=True,
                        help_text="Cultural values and considerations specific to your state",
                        max_length=1500,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="values",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
